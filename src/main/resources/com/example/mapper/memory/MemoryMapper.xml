<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.memory.MemoryMapper" >
  <resultMap id="BaseResultMap" type="com.example.domain.memory.Memory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="is_public_sche" property="isPublicSche" jdbcType="TINYINT" />
    <result column="post_at" property="postAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <!-- 結合用ResultMap -->
  <resultMap id="MemoryResultMap" type="com.example.domain.memory.Memory" >
   	<id column="m_id" property="id" jdbcType="INTEGER" />
    <result column="m_user_id" property="userId" jdbcType="INTEGER" />
    <result column="m_shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="m_title" property="title" jdbcType="VARCHAR" />
    <result column="m_content" property="content" jdbcType="VARCHAR" />
    <result column="m_is_public_sche" property="isPublicSche" jdbcType="TINYINT" />
    <result column="m_post_at" property="postAt" jdbcType="TIMESTAMP" />
  
  	<association property="user" javaType="com.example.domain.user.User">
  	  <id column="u_id" property="id" jdbcType="INTEGER" />
	  <result column="u_name" property="name" jdbcType="VARCHAR" />
	  <result column="u_email" property="email" jdbcType="VARCHAR" />
	  <result column="u_password" property="password" jdbcType="CHAR" />
	  <result column="u_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	  <result column="u_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	  <result column="u_image_path" property="imagePath" jdbcType="VARCHAR" />
	  <result column="u_deleted" jdbcType="TINYINT" property="deleted" />
  	</association>
  	
  	<collection property="scheduleForPostList" resultMap="ScheForPostResultMap" />
  	<collection property="memoryImageList" resultMap="MemoryImageResultMap" />
  </resultMap>
  
  <resultMap id="ScheForPostResultMap" type="com.example.domain.memory.ScheForPost">
  <id column="sfp_id" property="id" jdbcType="INTEGER" />
    <result column="sfp_schedule_id" property="scheduleId" jdbcType="INTEGER" />
    <result column="sfp_memory_id" property="memoryId" jdbcType="INTEGER" />
    <result column="sfp_shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="sfp_title" property="title" jdbcType="VARCHAR" />
    <result column="sfp_start_at" property="startAt" jdbcType="TIMESTAMP" />
    <result column="sfp_finish_at" property="finishAt" jdbcType="TIMESTAMP" />
    <result column="sfp_icon_path" property="iconPath" jdbcType="VARCHAR" />
    <result column="sfp_url" property="url" jdbcType="VARCHAR" />
    <result column="sfp_address" property="address" jdbcType="VARCHAR" />
    <result column="sfp_tel" property="tel" jdbcType="VARCHAR" />
    <result column="sfp_memo" property="memo" jdbcType="VARCHAR" />
    <result column="sfp_cost" property="cost" jdbcType="INTEGER" />
    <result column="sfp_creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="sfp_created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="sfp_updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="sfp_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  	
  	<association property="user" javaType="com.example.domain.user.User">
  	  <id column="u_id" property="id" jdbcType="INTEGER" />
	  <result column="u_name" property="name" jdbcType="VARCHAR" />
	  <result column="u_email" property="email" jdbcType="VARCHAR" />
	  <result column="u_password" property="password" jdbcType="CHAR" />
	  <result column="u_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	  <result column="u_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	  <result column="u_image_path" property="imagePath" jdbcType="VARCHAR" />
	  <result column="u_deleted" jdbcType="TINYINT" property="deleted" />
  	</association>
  	
  	<association property="shiori" javaType="com.example.domain.shiori.Shiori">
  	  <id column="s_id" property="id" jdbcType="INTEGER"/>
  	  <result column="s_title" property="title" jdbcType="VARCHAR"/>
  	  <result column="s_dep_at" property="depAt" jdbcType="VARCHAR"/>
  	  <result column="s_return_at" property="returnAt" jdbcType="VARCHAR"/>
  	  <result column="s_image_path" property="imagePath" jdbcType="VARCHAR"/>
  	  <result column="s_total_cost" property="totalCost" jdbcType="INTEGER"/>
  	  <result column="s_creator_id" property="creatorId" jdbcType="INTEGER"/>
  	  <result column="s_created_at" property="createdAt" jdbcType="TIMESTAMP"/>
  	  <result column="s_updater_id" property="updaterId" jdbcType="INTEGER"/>
  	  <result column="s_updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
  	  <result column="s_version" property="version" jdbcType="INTEGER"/>
	  
	  <association property="user" javaType="com.example.domain.user.User">
  	  	<id column="u_id" property="id" jdbcType="INTEGER" />
	  	<result column="u_name" property="name" jdbcType="VARCHAR" />
	  	<result column="u_email" property="email" jdbcType="VARCHAR" />
	  	<result column="u_password" property="password" jdbcType="CHAR" />
	  	<result column="u_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	 	<result column="u_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	  	<result column="u_image_path" property="imagePath" jdbcType="VARCHAR" />
	  	<result column="u_deleted" jdbcType="TINYINT" property="deleted" />
      </association>
      
	  <collection property="userList" resultMap="UserResultMap" />
  	  <collection property="destinationList" resultMap="DestinationResultMap" />
    </association>
  </resultMap>
  
  <resultMap id="UserResultMap" type="com.example.domain.user.User" >
  	<id column="u_id" property="id" jdbcType="INTEGER" />
	<result column="u_name" property="name" jdbcType="VARCHAR" />
	<result column="u_email" property="email" jdbcType="VARCHAR" />
	<result column="u_password" property="password" jdbcType="CHAR" />
	<result column="u_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	<result column="u_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	<result column="u_image_path" property="imagePath" jdbcType="VARCHAR" />
	<result column="u_deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  
  <resultMap id="DestinationResultMap" type="com.example.domain.shiori.Destination" >
  	<id column="d_id" property="id" jdbcType="INTEGER"/>
  	<result column="d_shiori_id" property="shioriId" jdbcType="INTEGER"/>
  	<result column="d_destination" property="destination" jdbcType="VARCHAR"/>
  	<result column="d_creator_id" property="creatorId" jdbcType="INTEGER"/>
  	<result column="d_created_at" property="creatorAt" jdbcType="TIMESTAMP"/>
  	<result column="d_updater_id" property="updaterId" jdbcType="INTEGER"/>
  	<result column="d_updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
  	<result column="d_version" property="version" jdbcType="INTEGER"/>
  	<association property="user" javaType="com.example.domain.user.User">
  	  <id column="ud_id" property="id" jdbcType="INTEGER" />
	  <result column="ud_name" property="name" jdbcType="VARCHAR" />
	  <result column="ud_email" property="email" jdbcType="VARCHAR" />
	  <result column="ud_password" property="password" jdbcType="CHAR" />
	  <result column="ud_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	  <result column="ud_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	  <result column="ud_image_path" property="imagePath" jdbcType="VARCHAR" />
	  <result column="ud_deleted" jdbcType="TINYINT" property="deleted" />
  	</association>
  </resultMap>
  
  <resultMap id="MemoryImageResultMap" type="com.example.domain.memory.MemoryImage" >
    <id column="mi_id" property="id" jdbcType="INTEGER" />
    <result column="mi_memory_id" property="memoryId" jdbcType="INTEGER" />
    <result column="mi_image_path" property="imagePath" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List" >
    id, user_id, shiori_id, title, content, is_public_sche, post_at
  </sql>
  
  <sql id="Memories_Column_List">
    m.id m_id, m.user_id m_user_id, m.shiori_id m_shiori_id, m.title m_title, m.content m_content, m.is_public_sche m_is_public_sche, m.post_at m_post_at 
  </sql>
  
  <sql id="Users_Column_List">
  	, u.id u_id, u.name u_name, u.email u_email, u.password u_password, u.created_at u_created_at, u.updated_at u_updated_at, u.image_path u_image_path, u.deleted u_deleted
  </sql>
  
  <sql id="Shioris_Column_List">
  	, s.id s_id,s.title s_title,s.dep_at s_dep_at
	,s.return_at s_return_at,s.image_path s_image_path,s.total_cost s_total_cost
	,s.creator_id s_creator_id,s.created_at s_created_at
	,s.updater_id s_updater_id,s.updated_at s_updated_at,s.version s_version
  </sql>
  
  <sql id="ScheForPosts_Column_List" >
    , sfp.id sfp_id, sfp.shiori_id sfp_shiori_id, sfp.title sfp_title, sfp.start_at sfp_start_at, sfp.finish_at sfp_finish_at, sfp.icon_path sfp_icon_path, sfp.url sfp_url, sfp.address sfp_address, sfp.tel sfp_tel 
    , sfp.memo sfp_memo, sfp.cost sfp_cost, sfp.creator_id sfp_creator_id, sfp.created_at sfp_created_at, sfp.updater_id sfp_updater_id, sfp.updated_at sfp_updated_at
  </sql>
  
  <sql id="MemoryImages_Column_List" >
    , mi.id mi_id, mi.memory_id mi_memory_id, mi.image_path mi_image_path
  </sql>
  
  <sql id="Memories_Table">
  	FROM memories m
  </sql>
  
   <sql id="Users_Table">
  	LEFT OUTER JOIN users u ON m.user_id = u.id
  </sql>
  
  <sql id="Shioris_Table">
  	LEFT OUTER JOIN shioris s ON m.shiori_id = s.id
  </sql>

  <sql id="ScheForPosts_Table">
  	LEFT OUTER JOIN sche_for_posts sfp ON sfp.shiori_id = s.id
  </sql>
  
  <sql id="MemoryImage_Table">
  	LEFT OUTER JOIN memory_images mi ON mi.memory_id = m.id
  </sql>
  
  <!-- SELECT -->
  <!-- 思い出情報一覧表示 -->
  <select id="selectAll"  resultMap="MemoryResultMap">
	SELECT
	<include refid="Memories_Column_List" />  
	<include refid="Users_Column_List" />  
	<include refid="Shioris_Column_List" />  
	<include refid="ScheForPosts_Column_List" />  
	<include refid="MemoryImages_Column_List" />  
	<include refid="Memories_Table" />  
	<include refid="Users_Table" />  
	<include refid="Shioris_Table" />  
	<include refid="ScheForPosts_Table" />
	<include refid="MemoryImage_Table" />
	ORDER BY m.id ASC;  
  </select>
  
  <!-- ユーザーIDに紐づく思い出情報一覧表示 -->
  <select id="selectByUserId"  resultMap="MemoryResultMap" parameterType="java.lang.Integer">
	SELECT
	<include refid="Memories_Column_List" />  
	<include refid="Users_Column_List" />  
	<include refid="Shioris_Column_List" />  
	<include refid="ScheForPosts_Column_List" />  
	<include refid="Memories_Table" />  
	<include refid="Users_Table" />  
	<include refid="Shioris_Table" />  
	<include refid="ScheForPosts_Table" />
 	WHERE user_id = #{userId,jdbcType=INTEGER}
	ORDER BY m.post_at ASC;  
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.example.memory.MemoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memories
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from memories
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="countByExample" parameterType="com.example.example.memory.MemoryExample" resultType="java.lang.Integer" >
    select count(*) from memories
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!-- DELETE -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from memories
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.example.memory.MemoryExample" >
    delete from memories
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <!-- INSERT -->
  <insert id="insert" parameterType="com.example.domain.memory.Memory" >
    insert into memories (id, user_id, shiori_id, title, 
      content, is_public_sche, post_at
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{isPublicSche,jdbcType=TINYINT}, #{postAt,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.example.domain.memory.Memory" useGeneratedKeys="true" keyProperty="id">
    insert into memories
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="shioriId != null" >
        shiori_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="isPublicSche != null" >
        is_public_sche,
      </if>
      <if test="postAt != null" >
        post_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="shioriId != null" >
        #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isPublicSche != null" >
        #{isPublicSche,jdbcType=TINYINT},
      </if>
      <if test="postAt != null" >
        #{postAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <!-- UPDATE -->
  <update id="updateByExampleSelective" parameterType="map" >
    update memories
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.shioriId != null" >
        shiori_id = #{record.shioriId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublicSche != null" >
        is_public_sche = #{record.isPublicSche,jdbcType=TINYINT},
      </if>
      <if test="record.postAt != null" >
        post_at = #{record.postAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExample" parameterType="map" >
    update memories
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      shiori_id = #{record.shioriId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      is_public_sche = #{record.isPublicSche,jdbcType=TINYINT},
      post_at = #{record.postAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.memory.Memory" >
    update memories
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="shioriId != null" >
        shiori_id = #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isPublicSche != null" >
        is_public_sche = #{isPublicSche,jdbcType=TINYINT},
      </if>
      <if test="postAt != null" >
        post_at = #{postAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.example.domain.memory.Memory" >
    update memories
    set user_id = #{userId,jdbcType=INTEGER},
   	  shiori_id = #{shioriId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      is_public_sche = #{isPublicSche,jdbcType=TINYINT},
      post_at = #{postAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>