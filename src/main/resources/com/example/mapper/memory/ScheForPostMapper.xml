<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.memory.ScheForPostMapper" >
  <resultMap id="BaseResultMap" type="com.example.domain.memory.ScheForPost" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="schedule_id" property="scheduleId" jdbcType="INTEGER" />
    <result column="memory_id" property="memoryId" jdbcType="INTEGER" />
    <result column="shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_at" property="startAt" jdbcType="TIMESTAMP" />
    <result column="finish_at" property="finishAt" jdbcType="TIMESTAMP" />
    <result column="icon_path" property="iconPath" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="cost" property="cost" jdbcType="INTEGER" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
   <!-- 結合用ResultMap -->
  <resultMap id="ScheduleResultMap" type="com.example.domain.memory.ScheForPost" >
    <id column="sfp_id" property="id" jdbcType="INTEGER" />
    <result column="sfp_schedule_id" property="scheduleId" jdbcType="INTEGER" />
    <result column="sfp_memory_id" property="memoryId" jdbcType="INTEGER" />
    <result column="sfp_shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="sfp_title" property="title" jdbcType="VARCHAR" />
    <result column="sfp_start_at" property="startAt" jdbcType="TIMESTAMP" />
    <result column="sfp_finish_at" property="finishAt" jdbcType="TIMESTAMP" />
    <result column="sfp_icon_path" property="iconPath" jdbcType="VARCHAR" />
    <result column="sfp_url" property="url" jdbcType="VARCHAR" />
    <result column="sfp_address" property="address" jdbcType="VARCHAR" />
    <result column="sfp_tel" property="tel" jdbcType="VARCHAR" />
    <result column="sfp_memo" property="memo" jdbcType="VARCHAR" />
    <result column="sfp_cost" property="cost" jdbcType="INTEGER" />
    <result column="sfp_creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="sfp_created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="sfp_updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="sfp_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  	
  	<association property="user" javaType="com.example.domain.user.User">
  	  <id column="us_id" property="id" jdbcType="INTEGER" />
	  <result column="us_name" property="name" jdbcType="VARCHAR" />
	  <result column="us_email" property="email" jdbcType="VARCHAR" />
	  <result column="us_password" property="password" jdbcType="CHAR" />
	  <result column="us_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	  <result column="us_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	  <result column="us_image_path" property="imagePath" jdbcType="VARCHAR" />
	  <result column="us_deleted" jdbcType="TINYINT" property="deleted" />
  	</association>
  	
  	<association property="shiori" javaType="com.example.domain.shiori.Shiori">
  	  <id column="sh_id" property="id" jdbcType="INTEGER"/>
  	  <result column="sh_title" property="title" jdbcType="VARCHAR"/>
  	  <result column="sh_dep_at" property="depAt" jdbcType="VARCHAR"/>
  	  <result column="sh_return_at" property="returnAt" jdbcType="VARCHAR"/>
  	  <result column="sh_image_path" property="imagePath" jdbcType="VARCHAR"/>
  	  <result column="sh_total_cost" property="totalCost" jdbcType="INTEGER"/>
  	  <result column="sh_creator_id" property="creatorId" jdbcType="INTEGER"/>
  	  <result column="sh_created_at" property="createdAt" jdbcType="TIMESTAMP"/>
  	  <result column="sh_updater_id" property="updaterId" jdbcType="INTEGER"/>
  	  <result column="sh_updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
  	  <result column="sh_version" property="version" jdbcType="INTEGER"/>
	  
	  <association property="user" javaType="com.example.domain.user.User">
  	  	<id column="ush_id" property="id" jdbcType="INTEGER" />
	  	<result column="ush_name" property="name" jdbcType="VARCHAR" />
	  	<result column="ush_email" property="email" jdbcType="VARCHAR" />
	  	<result column="ush_password" property="password" jdbcType="CHAR" />
	  	<result column="ush_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	 	<result column="ush_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	  	<result column="ush_image_path" property="imagePath" jdbcType="VARCHAR" />
	  	<result column="ush_deleted" jdbcType="TINYINT" property="deleted" />
      </association>
      
	  <collection property="userList" resultMap="userResultMap" />
  	  <collection property="destinationList" resultMap="destinationResultMap" />
    </association>
  </resultMap>
  
  <resultMap id="userResultMap" type="com.example.domain.user.User" >
  	<id column="u_id" property="id" jdbcType="INTEGER" />
	<result column="u_name" property="name" jdbcType="VARCHAR" />
	<result column="u_email" property="email" jdbcType="VARCHAR" />
	<result column="u_password" property="password" jdbcType="CHAR" />
	<result column="u_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	<result column="u_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	<result column="u_image_path" property="imagePath" jdbcType="VARCHAR" />
	<result column="u_deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  
  <resultMap id="destinationResultMap" type="com.example.domain.shiori.Destination" >
  	<id column="d_id" property="id" jdbcType="INTEGER"/>
  	<result column="d_shiori_id" property="shioriId" jdbcType="INTEGER"/>
  	<result column="d_destination" property="destination" jdbcType="VARCHAR"/>
  </resultMap>
  
  <sql id="ScheForPost_Column_List" >
    sfp.id sfp_id, sfp.shiori_id sfp_shiori_id, sfp.title sfp_title, sfp.start_at sfp_start_at, sfp.finish_at sfp_finish_at, sfp.icon_path sfp_icon_path, sfp.url sfp_url, sfp.address sfp_address, sfp.tel sfp_tel, 
    sfp.memo sfp_memo, sfp.cost sfp_cost, sfp.creator_id sfp_creator_id, sfp.created_at sfp_created_at, sfp.updater_id sfp_updater_id, sfp.updated_at sfp_updated_at
  </sql>
  
  <sql id="User_For_Schedule_Column_List">
  	, us.id us_id, us.name us_name, us.email us_email, us.password us_password, 
  	us.created_at us_created_at, us.updated_at us_updated_at, us.image_path us_image_path, us.deleted us_deleted
  </sql>

  <sql id="Shiori_Column_List">
  	, sh.id sh_id, sh.title sh_title, sh.dep_at sh_dep_at, sh.return_at sh_return_at, sh.image_path sh_image_path, 
  	sh.total_cost sh_total_cost, sh.creator_id sh_creator_id, sh.created_at sh_created_at, sh.updater_id sh_updater_id,
 	sh.updated_at sh_updated_at, sh.version sh_version
  </sql>
  
  <sql id="User_For_Shiori_Column_List">
  	, ush.id ush_id, ush.name ush_name, ush.email ush_email, ush.password ush_password, 
  	ush.created_at ush_created_at, ush.updated_at ush_updated_at, ush.image_path ush_image_path, ush.deleted ush_deleted
  </sql>
  
  <sql id="Destination_Column_List">
  	, d.id d_id, d.shiori_id d_shiori_id, d.destination d_destination
  </sql>
  
  <sql id="User_For_Destination_Column_List">
  	, ud.id ud_id, ud.name ud_name, ud.email ud_email, ud.password ud_password, 
  	ud.created_at ud_created_at, ud.updated_at ud_updated_at, ud.image_path ud_image_path, ud.deleted ud_deleted
  </sql>
  
  <sql id="Schedules_Table">
  	FROM sche_for_posts sfp
  </sql>
  
  <sql id="Users_For_Schedules_Table">
  	LEFT OUTER JOIN users us ON sfp.creator_id = us.id
  </sql>

  <sql id="Shioris_For Schedules_Table">
  	LEFT OUTER JOIN shioris sh ON sfp.shiori_id = sh.id
  </sql>
  
   <sql id="Users_For_Shioris_Table">
  	LEFT OUTER JOIN users ush ON sh.creator_id = ush.id
  </sql>
  
  <sql id="Destinations_Table">
  	LEFT JOIN destinations d
  	ON d.shiori_id = sh.id
  </sql>
  
  <sql id="Blob_Column_List" >
    url
  </sql>
  
  <!-- SELECT -->
  <!-- しおりIDに紐づくスケジュール情報取得 -->
  <select id="selectByShioriId" resultMap="ScheduleResultMap" parameterType="java.lang.Integer">
  	SELECT
  	<include refid="ScheForPost_Column_List" />
  	<include refid="User_For_Schedule_Column_List" />
  	<include refid="Shiori_Column_List" />
  	<include refid="User_For_Shiori_Column_List" />
  	<include refid="Destination_Column_List" />
  	<include refid="Schedules_Table" />
  	<include refid="Users_For_Schedules_Table" />
  	<include refid="Shioris_For Schedules_Table" />
	<include refid="Users_For_Shioris_Table" />
  	<include refid="Destinations_Table" />
  	WHERE sh.id in (SELECT shiori_id FROM members mb WHERE mb.user_id=#{userId,jdbcType=INTEGER})
   	ORDER BY sfp.start_at ASC;
  </select>
  
  <sql id="Example_Where_Clause" >
   
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
   
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List" >
    id, schedule_id, memory_id, shiori_id, title, start_at, finish_at, icon_path, tel,
    url, address, memo, cost, creator_id, created_at, updater_id, updated_at
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.example.memory.ScheForPostExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sche_for_posts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sche_for_posts
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sche_for_posts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.example.example.memory.ScheForPostExample" >
    delete from sche_for_posts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.example.domain.memory.ScheForPost" >
    insert into sche_for_posts (id, schedule_id, memory_id, shiori_id,
      title, start_at, finish_at, 
      icon_path, tel, 
      url, address, memo, 
      cost, creator_id, created_at, updater_id, updated_at)
    values (#{id,jdbcType=INTEGER}, #{scheduleId,jdbcType=INTEGER}, #{memoryId,jdbcType=INTEGER}, #{shioriId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{startAt,jdbcType=TIMESTAMP}, #{finishAt,jdbcType=TIMESTAMP}, 
      #{iconPath,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{destination,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{cost,jdbcType=INTEGER}, #{creator_id,jdbcType=INTEGER}, #{created_at,jdbcType=TIMESTAMP}, #{updater_id,jdbcType=INTEGER}, #{updated_at,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertSelective" parameterType="com.example.domain.memory.ScheForPost">
    insert into sche_for_posts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="scheduleId != null" >
        schedule_id,
      </if>
      <if test="memoryId != null" >
        memory_id,
      </if>
      <if test="shioriId != null" >
        shiori_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="startAt != null" >
        start_at,
      </if>
      <if test="finishAt != null" >
        finish_at,
      </if>
      <if test="iconPath != null" >
        icon_path,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="cost != null" >
        cost,
      </if>
        <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null" >
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="memoryId != null" >
        #{memoryId,jdbcType=INTEGER},
      </if>
      <if test="shioriId != null" >
        #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="startAt != null" >
        #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAt != null" >
        #{finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="iconPath != null" >
        #{iconPath, jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null " >
        #{updatedAt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.example.example.memory.ScheForPostExample" resultType="java.lang.Integer" >
    select count(*) from sche_for_posts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map" >
    update sche_for_posts
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleId != null" >
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.memoryId != null" >
        memory_id = #{record.memoryId,jdbcType=INTEGER},
      </if>
      <if test="record.shioriId != null" >
        shiori_id = #{record.shioriId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.startAt != null" >
        start_at = #{record.startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishAt != null" >
        finish_at = #{record.finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.iconPath != null" >
        icon_path = #{record.iconPath,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=INTEGER},
      </if>
       <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
       <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
       <if test="record.updaterId != null" >
        updater_id = #{record.updaterId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExample" parameterType="map" >
    update sche_for_posts
    set id = #{record.id,jdbcType=INTEGER},
      schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      memory_id = #{record.memoryId,jdbcType=INTEGER},
      shiori_id = #{record.shioriId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      start_at = #{record.startAt,jdbcType=TIMESTAMP},
      finish_at = #{record.finishAt,jdbcType=TIMESTAMP},
      icon_path = #{record.iconPath,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=INTEGER},
      creator_id = #{record.creator_id,jdbcType=INTEGER},
      created_at = #{record.created_at,jdbcType=TIMESTAMP},
      updater_id = #{record.updater_id,jdbcType=INTEGER},
      updated_at = #{record.updated_at,jdbcType=INTEGER},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.memory.ScheForPost" >
    update sche_for_posts
    <set >
      <if test="scheduleId != null" >
        schedule_id = #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="memoryId != null" >
        memory_id = #{memoryId,jdbcType=INTEGER},
      </if>
      <if test="shiori != null" >
        shiori_id = #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startAt != null" >
        start_at = #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAt != null" >
        finish_at = #{finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="iconPath != null" >
        icon_path = #{iconPath, jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=INTEGER},
      </if>
         <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
       <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
       <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.example.domain.memory.ScheForPost" >
    update sche_for_posts
    set schedule_id = #{scheduleId,jdbcType=INTEGER},
      memory_id = #{memoryId,jdbcType=INTEGER},
      shiori_id = #{shioriId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      start_at = #{startAt,jdbcType=TIMESTAMP},
      finish_at = #{finishAt,jdbcType=TIMESTAMP},
      icon_path = #{iconPath,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=INTEGER},
      creator_id = #{creator_id,jdbcType=INTEGER},
      created_at = #{created_at,jdbcType=TIMESTAMP},
      updater_id = #{updater_id,jdbcType=INTEGER},
      updated_at = #{updated_at,jdbcType=INTEGER},
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>