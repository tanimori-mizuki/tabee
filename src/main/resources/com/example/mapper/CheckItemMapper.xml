<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.CheckItemMapper" >
  <resultMap id="BaseResultMap" type="com.example.domain.CheckItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="check_title" property="checkTitle" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="tab_id" property="tabId" jdbcType="INTEGER" />
    <result column="is_shared" property="isShared" jdbcType="TINYINT" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="is_checked" property="isChecked" jdbcType="TINYINT" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
  
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, check_title, category_id, tab_id, is_shared, creator_id, created_at, updater_id, 
    updated_at, is_checked, version
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.example.CheckItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from check_items
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from check_items
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.example.CheckItemExample" >
    delete from check_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.domain.CheckItem" >
    insert into check_items (id, check_title, category_id, 
      tab_id, is_shared, creator_id, 
      created_at, updater_id, updated_at, 
      is_checked, version)
    values (#{id,jdbcType=INTEGER}, #{checkTitle,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{tabId,jdbcType=INTEGER}, #{isShared,jdbcType=TINYINT}, #{creatorId,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{isChecked,jdbcType=TINYINT}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.domain.CheckItem" >
    insert into check_items
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="checkTitle != null" >
        check_title,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="tabId != null" >
        tab_id,
      </if>
      <if test="isShared != null" >
        is_shared,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="isChecked != null" >
        is_checked,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="checkTitle != null" >
        #{checkTitle,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="tabId != null" >
        #{tabId,jdbcType=INTEGER},
      </if>
      <if test="isShared != null" >
        #{isShared,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isChecked != null" >
        #{isChecked,jdbcType=TINYINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.example.CheckItemExample" resultType="java.lang.Integer" >
    select count(*) from check_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update check_items
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.checkTitle != null" >
        check_title = #{record.checkTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.tabId != null" >
        tab_id = #{record.tabId,jdbcType=INTEGER},
      </if>
      <if test="record.isShared != null" >
        is_shared = #{record.isShared,jdbcType=TINYINT},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updaterId != null" >
        updater_id = #{record.updaterId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isChecked != null" >
        is_checked = #{record.isChecked,jdbcType=TINYINT},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update check_items
    set id = #{record.id,jdbcType=INTEGER},
      check_title = #{record.checkTitle,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      tab_id = #{record.tabId,jdbcType=INTEGER},
      is_shared = #{record.isShared,jdbcType=TINYINT},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updater_id = #{record.updaterId,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      is_checked = #{record.isChecked,jdbcType=TINYINT},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.CheckItem" >
    update check_items
    <set >
      <if test="checkTitle != null" >
        check_title = #{checkTitle,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="tabId != null" >
        tab_id = #{tabId,jdbcType=INTEGER},
      </if>
      <if test="isShared != null" >
        is_shared = #{isShared,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isChecked != null" >
        is_checked = #{isChecked,jdbcType=TINYINT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.CheckItem" >
    update check_items
    set check_title = #{checkTitle,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      tab_id = #{tabId,jdbcType=INTEGER},
      is_shared = #{isShared,jdbcType=TINYINT},
      creator_id = #{creatorId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      is_checked = #{isChecked,jdbcType=TINYINT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>