<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.shiori.ShioriMapper" >
  <resultMap id="BaseResultMap" type="com.example.domain.shiori.Shiori" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="dep_at" property="depAt" jdbcType="DATE" />
    <result column="return_at" property="returnAt" jdbcType="DATE" />
    <result column="image_path" property="imagePath" jdbcType="VARCHAR" />
    <result column="total_cost" property="totalCost" jdbcType="INTEGER" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <!--テーブル結合用ResultMap  -->
    <resultMap id="ShioriResultMap" type="com.example.domain.shiori.Shiori" >
	    <id column="s_id" property="id" jdbcType="INTEGER" />
	    <result column="s_title" property="title" jdbcType="VARCHAR" />
	    <result column="s_dep_at" property="depAt" jdbcType="DATE" />
	    <result column="s_return_at" property="returnAt" jdbcType="DATE" />
	    <result column="s_image_path" property="imagePath" jdbcType="VARCHAR" />
	    <result column="s_total_cost" property="totalCost" jdbcType="INTEGER" />
	    <result column="s_creator_id" property="creatorId" jdbcType="INTEGER" />
	    <result column="s_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	    <result column="s_updater_id" property="updaterId" jdbcType="INTEGER" />
	    <result column="s_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	    <result column="s_version" property="version" jdbcType="INTEGER" />
	    <collection property="userList" resultMap="UserResultMap" />
	   	<collection property="destinationList" resultMap="DestinationResultMap" />
  </resultMap>
    <resultMap id="UserResultMap" type="com.example.domain.user.User">
    <id column="u_id" jdbcType="INTEGER" property="id" />
    <result column="u_name" jdbcType="VARCHAR" property="name" />
    <result column="u_email" jdbcType="VARCHAR" property="email" />
    <result column="u_password" jdbcType="VARCHAR" property="password" />
    <result column="u_created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="u_updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="u_image_path" jdbcType="VARCHAR" property="imagePath" />
    <result column="u_deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <resultMap id="DestinationResultMap" type="com.example.domain.shiori.Destination" >
    <id column="d_id" property="id" jdbcType="INTEGER" />
    <result column="d_shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="d_destination" property="destination" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, dep_at, return_at, image_path, total_cost,creator_id, created_at, updater_id, updated_at, 
    version
  </sql>
  <sql id="Shioris_Column_List">
  	s.id AS s_id,s.title AS s_title,s.dep_at AS s_dep_at
	,s.return_at AS s_return_at,s.image_path AS s_image_path,s.total_cost AS s_total_cost
	,s.creator_id AS s_creator_id,s.created_at AS s_created_at
	,s.updater_id AS s_updater_id,s.updated_at s_updated_at,s.version AS s_version
  </sql>
  <sql id="Users_Column_List">
	,u.id AS u_id,u.name AS u_name,u.email AS u_email,u.password AS u_password,u.created_at AS u_created_at
	,u.updated_at AS u_updated_at,u.image_path AS u_image_path,u.deleted AS u_deleted
  </sql>
  <sql id="Destinations_Column_List">
  	,d.id AS d_id, d.shiori_id AS d_shiori_id, d.destination AS d_destination
  </sql>
  <sql id="Shioris_Table">
  	FROM shioris s
  </sql>
  <sql id="Members_Table">
  	LEFT JOIN members mb
	ON s.id=mb.shiori_id
  </sql>
  <sql id="Users_Table">
	LEFT JOIN users u
	ON mb.user_id=u.id
  </sql>
  <sql id="Destinations_Table">
  	LEFT JOIN destinations d
  	ON d.shiori_id=s.id
  </sql>
  <!--ログインユーザIDからしおり情報取得  -->
  <select id="selectByUserId" resultMap="ShioriResultMap">
   SELECT
   <include refid="Shioris_Column_List"/>
   <include refid="Users_Column_List"/>
   <include refid="Destinations_Column_List"/>
   <include refid="Shioris_Table"/>
   <include refid="Members_Table"/>
   <include refid="Users_Table"/>
   <include refid="Destinations_Table"/>   
   WHERE s.id in (SELECT shiori_id FROM members WHERE user_id=#{userId,jdbcType=INTEGER})
   ORDER BY s.created_at DESC;
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.example.shiori.ShioriExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shioris
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shioris
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shioris
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.example.shiori.ShioriExample" >
    delete from shioris
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.domain.shiori.Shiori" >
    insert into shioris (id, title, dep_at, 
      return_at, image_path, creator_id, 
      created_at, updater_id, updated_at, 
      version)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{depAt,jdbcType=DATE}, 
      #{returnAt,jdbcType=DATE}, #{imagePath,jdbcType=VARCHAR}, #{creatorId,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
<!--しおり情報を登録する。useGeneratedKeys="true"で自動採番されたidを返す  -->
  <insert id="insertSelective" parameterType="com.example.domain.shiori.Shiori" useGeneratedKeys="true" keyProperty="id">
    insert into shioris
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="depAt != null" >
        dep_at,
      </if>
      <if test="returnAt != null" >
        return_at,
      </if>
      <if test="imagePath != null" >
        image_path,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="depAt != null" >
        #{depAt,jdbcType=DATE},
      </if>
      <if test="returnAt != null" >
        #{returnAt,jdbcType=DATE},
      </if>
      <if test="imagePath != null" >
        #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.example.shiori.ShioriExample" resultType="java.lang.Integer" >
    select count(*) from shioris
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shioris
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.depAt != null" >
        dep_at = #{record.depAt,jdbcType=DATE},
      </if>
      <if test="record.returnAt != null" >
        return_at = #{record.returnAt,jdbcType=DATE},
      </if>
      <if test="record.imagePath != null" >
        image_path = #{record.imagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updaterId != null" >
        updater_id = #{record.updaterId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shioris
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      dep_at = #{record.depAt,jdbcType=DATE},
      return_at = #{record.returnAt,jdbcType=DATE},
      image_path = #{record.imagePath,jdbcType=VARCHAR},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updater_id = #{record.updaterId,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.shiori.Shiori" >
    update shioris
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="depAt != null" >
        dep_at = #{depAt,jdbcType=DATE},
      </if>
      <if test="returnAt != null" >
        return_at = #{returnAt,jdbcType=DATE},
      </if>
      <if test="imagePath != null" >
        image_path = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="totalCost != null" >
        total_cost = #{totalCost,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.shiori.Shiori" >
    update shioris
    set title = #{title,jdbcType=VARCHAR},
      dep_at = #{depAt,jdbcType=DATE},
      return_at = #{returnAt,jdbcType=DATE},
      image_path = #{imagePath,jdbcType=VARCHAR},
      total_cost = #{totalCost,jdbcType=INTEGER},
      creator_id = #{creatorId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>