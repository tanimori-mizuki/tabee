<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.shiori.DestinationMapper" >
  <resultMap id="BaseResultMap" type="com.example.domain.shiori.Destination" >
   
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
   
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
  
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
   
    id, shiori_id, destination
  </sql>
  <!--目的地を一括挿入する  -->
  <insert id="insertDestinationList">
  	  insert into destinations (shiori_id, destination) values 
     <foreach item="d" collection="destinationList" separator=",">
      (#{d.shioriId,jdbcType=INTEGER}, #{d.destination,jdbcType=VARCHAR})
      </foreach>
  </insert>
  <!--目的地を一括更新する  -->
  <update id="updateDestinations">
  	update destinations set 
  	 destination =elt(field(id,
  	 <foreach item="destinationId" collection="destinationIdList" separator=",">
      #{destinationId,jdbcType=INTEGER}
     </foreach>
     ), <foreach item="d" collection="destinationList" separator=",">
      #{d.destination,jdbcType=VARCHAR}
     </foreach>)
      where id in
     <foreach item="destinationId" collection="destinationIdList" open="(" separator="," close=")">
      #{destinationId,jdbcType=INTEGER}
     </foreach>
  </update>
  <!--一括削除  -->
  <delete id="deleteDetinations" parameterType="java.lang.Integer" >
    delete from destinations
    where id in
     <foreach item="destinationId" collection="destinationIdList" open="(" separator="," close=")">
      #{destinationId,jdbcType=INTEGER}
     </foreach>
  </delete>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.example.shiori.DestinationExample" >
   
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from destinations
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
   
    select 
    <include refid="Base_Column_List" />
    from destinations
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
  
    delete from destinations
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.example.shiori.DestinationExample" >
  
    delete from destinations
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.domain.shiori.Destination" >
  
    insert into destinations (id, shiori_id, destination)
    values (#{id,jdbcType=INTEGER}, #{shioriId,jdbcType=INTEGER}, #{destination,jdbcType=VARCHAR}
  </insert>
  <insert id="insertSelective" parameterType="com.example.domain.shiori.Destination" >
  
    insert into destinations
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shioriId != null" >
        shiori_id,
      </if>
      <if test="destination != null" >
        destination,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shioriId != null" >
        #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.example.shiori.DestinationExample" resultType="java.lang.Integer" >
   
    select count(*) from destinations
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
  
    update destinations
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shioriId != null" >
        shiori_id = #{record.shioriId,jdbcType=INTEGER},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
  
    update destinations
    set id = #{record.id,jdbcType=INTEGER},
      shiori_id = #{record.shioriId,jdbcType=INTEGER},
      destination = #{record.destination,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.shiori.Destination" >
 
    update destinations
    <set >
      <if test="shioriId != null" >
        shiori_id = #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.shiori.Destination" >
    update destinations
    set shiori_id = #{shioriId,jdbcType=INTEGER},
      destination = #{destination,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>