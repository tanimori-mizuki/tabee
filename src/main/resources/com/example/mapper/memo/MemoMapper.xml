<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.memo.MemoMapper" >
  <resultMap id="BaseResultMap" type="com.example.domain.memo.Memo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="is_locked" property="isLocked" jdbcType="TINYINT" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <!--テーブル結合用ResultMap  -->
  <resultMap  id="MemoResultMap" type="com.example.domain.memo.Memo">
    <id column="m_id" property="id" jdbcType="INTEGER" />
    <result column="m_content" property="content" jdbcType="VARCHAR" />
    <result column="m_shiori_id" property="shioriId" jdbcType="INTEGER" />
    <result column="m_is_locked" property="isLocked" jdbcType="TINYINT" />
    <result column="m_creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="m_created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="m_updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="m_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="m_version" property="version" jdbcType="INTEGER" />
   	<association property="user" javaType="User">
	    <id column="um_id" property="id" jdbcType="INTEGER" />
	    <result column="um_name" property="name" jdbcType="VARCHAR" />
	    <result column="um_email" property="email" jdbcType="VARCHAR" />
	    <result column="um_password" property="password" jdbcType="CHAR" />
	    <result column="um_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	    <result column="um_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	    <result column="um_image_path" property="imagePath" jdbcType="VARCHAR" />
	    <result column="um_deleted" jdbcType="TINYINT" property="deleted" />
	    <result column="um_version" property="version" jdbcType="INTEGER" />
	</association>
    <collection property="memoImageList" resultMap="MemoImageResultMap" />
  </resultMap>
  <resultMap id="MemoImageResultMap" type="com.example.domain.memo.MemoImage" >
    <id column="mi_id" property="id" jdbcType="INTEGER" />
    <result column="mi_memo_id" property="memoId" jdbcType="INTEGER" />
    <result column="mi_image_path" property="imagePath" jdbcType="VARCHAR" />
    <result column="mi_creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="mi_created_at" property="createdAt" jdbcType="TIMESTAMP" />
	<association property="user" javaType="User">
		    <id column="umi_id" property="id" jdbcType="INTEGER" />
		    <result column="umi_name" property="name" jdbcType="VARCHAR" />
		    <result column="umi_email" property="email" jdbcType="VARCHAR" />
		    <result column="umi_password" property="password" jdbcType="CHAR" />
		    <result column="umi_created_at" property="createdAt" jdbcType="TIMESTAMP" />
		    <result column="umi_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		    <result column="umi_image_path" property="imagePath" jdbcType="VARCHAR" />
		    <result column="umi_deleted" jdbcType="TINYINT" property="deleted" />
		    <result column="umi_version" property="version" jdbcType="INTEGER" />
	</association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content, shiori_id, is_locked, creator_id, created_at, updater_id, updated_at, 
    version
  </sql>
  <sql id="Memos_Column_List">
 	m.id AS m_id,m.content AS m_content,m.shiori_id AS m_shiori_id,m.is_locked AS m_is_locked
	,m.creator_id AS m_creator_id,m.created_at AS m_created_at,m.updater_id AS m_updater_id,m.updated_at AS m_updated_at
	,m.version AS m_version
  </sql>
  <sql id="User_ForMemos_Column_List">
	,um.id AS um_id,um.name AS um_name,um.email AS um_email,um.password AS um_password,um.created_at AS um_created_at
	,um.updated_at AS um_updated_at,um.image_path AS um_image_path,um.deleted AS um_deleted
  </sql>
  <sql id="Memo_Images_Column_List">
 	 ,mi.id AS mi_id,mi.memo_id AS mi_memo_id,mi.image_path AS mi_image_path,mi.creator_id AS mi_creator_id,mi.created_at AS mi_created_at
  </sql>
  <sql id="Users_ForMemoImages_Column_List">
  	,umi.id AS umi_id,umi.name AS umi_name,umi.email AS umi_email,umi.password AS umi_password,umi.created_at AS umi_created_at
	,umi.updated_at AS umi_updated_at,umi.image_path AS umi_image_path,umi.deleted AS umi_deleted
  </sql>
  <sql id="Memos_Table">
  	FROM memos m
  </sql>
  <sql id="Users_ForMemos_Table">
   LEFT JOIN users um ON m.creator_id =um.id
  </sql>
  <sql id="Memo_Images_Table">
 	LEFT JOIN memo_images mi ON m.id=mi.memo_id
  </sql>
  <sql id="Users_ForMemoImages_Tabel">
	LEFT JOIN users umi ON mi.creator_id=umi.id 	
  </sql>
  <!--メモ一覧表示 -->
  <select id="selectByshioriId" resultMap="MemoResultMap">
	SELECT
		<include refid="Memos_Column_List"/>
		<include refid="User_ForMemos_Column_List"/>
		<include refid="Memo_Images_Column_List"/>
		<include refid="Users_ForMemoImages_Column_List"/>
		<include refid="Memos_Table"/>
		<include refid="Users_ForMemos_Table"/>
		<include refid="Memo_Images_Table"/>
		<include refid="Users_ForMemoImages_Tabel"/>
	WHERE m.shiori_id=#{shioriId,jdbcType=INTEGER}
	ORDER BY m.created_at;
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.example.memo.MemoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  
    select 
    <include refid="Base_Column_List" />
    from memos
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
   
    delete from memos
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.example.memo.MemoExample" >
  
    delete from memos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.domain.memo.Memo" >
   
    insert into memos (id, content, shiori_id, 
      is_locked, creator_id, created_at, 
      updater_id, updated_at, version
      )
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{shioriId,jdbcType=INTEGER}, 
      #{isLocked,jdbcType=TINYINT}, #{creatorId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updaterId,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.domain.memo.Memo" >
   
    insert into memos
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="shioriId != null" >
        shiori_id,
      </if>
      <if test="isLocked != null" >
        is_locked,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="shioriId != null" >
        #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="isLocked != null" >
        #{isLocked,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.example.memo.MemoExample" resultType="java.lang.Integer" >
   
    select count(*) from memos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    
    update memos
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.shioriId != null" >
        shiori_id = #{record.shioriId,jdbcType=INTEGER},
      </if>
      <if test="record.isLocked != null" >
        is_locked = #{record.isLocked,jdbcType=TINYINT},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updaterId != null" >
        updater_id = #{record.updaterId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
  
    update memos
    set id = #{record.id,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      shiori_id = #{record.shioriId,jdbcType=INTEGER},
      is_locked = #{record.isLocked,jdbcType=TINYINT},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updater_id = #{record.updaterId,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.memo.Memo" >
  
    update memos
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="shioriId != null" >
        shiori_id = #{shioriId,jdbcType=INTEGER},
      </if>
      <if test="isLocked != null" >
        is_locked = #{isLocked,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.memo.Memo" >
   
    update memos
    set content = #{content,jdbcType=VARCHAR},
      shiori_id = #{shioriId,jdbcType=INTEGER},
      is_locked = #{isLocked,jdbcType=TINYINT},
      creator_id = #{creatorId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>